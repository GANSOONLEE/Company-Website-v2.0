/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/frontend/product-detail.js":
/*!*************************************************!*\
  !*** ./resources/js/frontend/product-detail.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/** Init document */\n\nvar tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\nvar tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n  return new bootstrap.Tooltip(tooltipTriggerEl);\n});\n\n/** Form Valid */\n// #region\n\n$('.form').submit(function (event) {\n  event.preventDefault();\n  if (validateForm()) {\n    this.submit();\n  } else {\n    setTimeout(function () {\n      tooltipList.forEach(function (tooltip) {\n        tooltip.hide();\n      });\n    }, 3000);\n  }\n});\nfunction validateForm() {\n  // check are brand select\n  var checkedRadio = $('input[type=\"radio\"][name=\"brand\"]:checked').length;\n  if (!checkedRadio > 0) {\n    tooltipList[0].show();\n    return false;\n  }\n\n  // check are quantity invalid\n  var checkedQuantity = $('input[type=\"number\"]')[0].value;\n  if (checkedQuantity == 0) {\n    tooltipList[1].show();\n    return false;\n  }\n  return true;\n}\n\n// #endregion\n\n/**\r\n * Image Selector\r\n */\n\n// #region\n\n// #endregion\n\n/** CLASS DEFINE */\n\n/**\r\n * @class Number Selector\r\n */\n\n// #region\nvar NumberSelector = /*#__PURE__*/function () {\n  // Initial Class\n  function NumberSelector(selectorID) {\n    _classCallCheck(this, NumberSelector);\n    /**\r\n     * @param {string} selectorID The id for selector\r\n     */\n    _defineProperty(this, \"selectorID\", void 0);\n    this.selectorID = selectorID;\n  }\n\n  // Static Method\n\n  // Dynamic Method\n\n  /**\r\n   * @function init Init instance\r\n   * @return {void}\r\n   * \r\n   */\n  _createClass(NumberSelector, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n      var removeButton = document.querySelector(\"[data-text=\\\"\".concat(this.selectorID, \"\\\"][data-button-type=\\\"remove\\\"]\"));\n      var addButton = document.querySelector(\"[data-text=\\\"\".concat(this.selectorID, \"\\\"][data-button-type=\\\"add\\\"]\"));\n      $(removeButton).click(function () {\n        _this.modifierQuantity('remove');\n      });\n      $(addButton).click(function () {\n        _this.modifierQuantity('add');\n      });\n    }\n  }, {\n    key: \"modifierQuantity\",\n    value: function modifierQuantity(method) {\n      // get text input\n      var textInput = document.querySelector(\"#\".concat(this.selectorID));\n\n      // check logic\n      var max = 100;\n      var min = 0;\n      var quantity = textInput.value;\n      if (method == \"add\" && quantity >= 100) {\n        return false;\n      }\n      if (method == \"remove\" && quantity <= 0) {\n        return false;\n      }\n      switch (method) {\n        case 'remove':\n          textInput.value = parseInt(textInput.value) - 1;\n          break;\n        case 'add':\n          textInput.value = parseInt(textInput.value) + 1;\n          break;\n        default:\n          break;\n      }\n    }\n  }]);\n  return NumberSelector;\n}();\nvar selector = new NumberSelector('quantity-input');\nselector.init();\n\n// #endregion\n\n/**\r\n * @class Image Selector\r\n */\nvar ImageSelector = /*#__PURE__*/function () {\n  /**\r\n   * \r\n   * @param {string} selectorID \r\n   */\n\n  function ImageSelector(selectorID) {\n    _classCallCheck(this, ImageSelector);\n    _defineProperty(this, \"selectorID\", void 0);\n    _defineProperty(this, \"container\", void 0);\n    this.selectorID = selectorID;\n  }\n  _createClass(ImageSelector, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      var imagePreview = $(\"#\".concat(this.selectorID));\n\n      // Button\n      var prevButton = imagePreview.find('[data-button=\"prev\"]');\n      var nextButton = imagePreview.find('[data-button=\"next\"]');\n      prevButton.click(function () {\n        _this2.moveContainer('prev');\n      });\n      nextButton.click(function () {\n        _this2.moveContainer('next');\n      });\n\n      // Container\n      this.container = imagePreview.find(\"[data-item=\\\"\".concat(this.selectorID, \"\\\"]\"));\n\n      // Image\n      var images = document.querySelectorAll(\"img[data-item=\\\"\".concat(this.selectorID, \"\\\"]\"));\n      images.forEach(function (image) {\n        image.addEventListener('mouseenter', function () {\n          _this2.imagePreview(image.src);\n        });\n        image.addEventListener('dblclick', function () {\n          _this2.imageZoom(image.src);\n        });\n      });\n    }\n  }, {\n    key: \"moveContainer\",\n    value: function moveContainer(mode) {\n      var container = this.container;\n      var containerWidth = container.width();\n      switch (mode) {\n        case 'prev':\n          var scrollX = container.scrollLeft() - containerWidth / 2;\n          container.animate({\n            scrollLeft: scrollX\n          }, 220);\n          break;\n        case 'next':\n          var scrollXNext = container.scrollLeft() + containerWidth / 2;\n          container.animate({\n            scrollLeft: scrollXNext\n          }, 220);\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"imagePreview\",\n    value: function imagePreview(imgSrc) {\n      imagePreviewContainer[0].querySelector('img').src = imgSrc;\n    }\n  }, {\n    key: \"imageZoom\",\n    value: function imageZoom(imgSrc) {\n      zoom.css('display', 'flex');\n      zoom.click(function () {\n        zoom.hide();\n      });\n      var imageZoom = $('#zoom-preview');\n      imageZoom.click(function (event) {\n        event.stopPropagation();\n      });\n      imageZoom.dblclick(function (event) {\n        event.stopPropagation();\n      });\n      imageZoom.attr('src', imgSrc);\n    }\n  }]);\n  return ImageSelector;\n}();\nvar zoom = $('div.zoom-preview');\nvar imagePreview = new ImageSelector('image-selector');\nvar imagePreviewContainer = $(\"#image-selector\");\nimagePreview.init();\n\n/**\r\n * Brand Image\r\n */\n\nvar brands = document.querySelectorAll('.brand-label');\nbrands.forEach(function (brand) {\n  brand.addEventListener('click', function () {\n    var src = brand.querySelector('input').value;\n    var category = brand.querySelector('input').getAttribute('data-category');\n    var code = brand.querySelector('input').getAttribute('data-product');\n    var relation = \"/storage/product/\".concat(category, \"/\").concat(code, \"/\").concat(src, \"/cover.png\");\n    imagePreviewContainer[0].querySelector('img').src = relation;\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/frontend/product-detail.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/frontend/product-detail.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;